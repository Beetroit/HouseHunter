"""Fixed Model imports

Revision ID: 3719c2b07592
Revises: 4f334650b26f
Create Date: 2025-04-05 08:39:37.901708

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3719c2b07592'
down_revision: Union[str, None] = '4f334650b26f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lease_agreement_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lease_agreement_templates')),
    sa.UniqueConstraint('name', name=op.f('uq_lease_agreement_templates_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'AGENT', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('reputation_points', sa.Integer(), server_default='0', nullable=False),
    sa.Column('is_verified_agent', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('profile_picture_url', sa.String(length=512), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_phone_number'), ['phone_number'], unique=True)

    op.create_table('properties',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('lister_id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('property_type', sa.Enum('HOUSE', 'APARTMENT', 'LAND', 'COMMERCIAL', 'OTHER', name='propertytype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', 'NEEDS_INFO', 'RENTED', 'UNLISTED', name='propertystatus'), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('pricing_type', sa.Enum('FOR_SALE', 'RENTAL_MONTHLY', 'RENTAL_WEEKLY', 'RENTAL_DAILY', 'RENTAL_CUSTOM', name='pricingtype'), nullable=False),
    sa.Column('custom_rental_duration_days', sa.Integer(), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.Column('square_feet', sa.Integer(), nullable=True),
    sa.Column('is_promoted', sa.Boolean(), nullable=False),
    sa.Column('promotion_expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rejected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rented_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['lister_id'], ['users.id'], name='fk_properties_lister_id_users'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='fk_properties_owner_id_users'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_properties'))
    )
    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_properties_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_lister_id'), ['lister_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_owner_id'), ['owner_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_price'), ['price'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_pricing_type'), ['pricing_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_promotion_expires_at'), ['promotion_expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_state'), ['state'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_status'), ['status'], unique=False)

    op.create_table('chats',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('property_id', sa.Uuid(), nullable=True),
    sa.Column('initiator_id', sa.Uuid(), nullable=False),
    sa.Column('property_user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['initiator_id'], ['users.id'], name='fk_chats_initiator_id_users'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name='fk_chats_property_id_properties'),
    sa.ForeignKeyConstraint(['property_user_id'], ['users.id'], name='fk_chats_property_user_id_users'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chats'))
    )
    with op.batch_alter_table('chats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chats_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chats_initiator_id'), ['initiator_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chats_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chats_property_user_id'), ['property_user_id'], unique=False)

    op.create_table('favorites',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('property_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_favorites_property_id_properties'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_favorites_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'property_id', name=op.f('pk_favorites')),
    sa.UniqueConstraint('user_id', 'property_id', name='uq_user_property_favorite')
    )
    op.create_table('leases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('landlord_id', sa.Uuid(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('rent_amount', sa.Float(), nullable=False),
    sa.Column('payment_day', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'TERMINATED', 'PENDING', name='leasestatus'), nullable=False),
    sa.Column('document_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['landlord_id'], ['users.id'], name=op.f('fk_leases_landlord_id_users')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_leases_property_id_properties')),
    sa.ForeignKeyConstraint(['tenant_id'], ['users.id'], name=op.f('fk_leases_tenant_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_leases'))
    )
    op.create_table('property_images',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('property_id', sa.Uuid(), nullable=False),
    sa.Column('image_url', sa.String(length=512), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name='fk_property_images_property_id_properties'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_property_images'))
    )
    with op.batch_alter_table('property_images', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_property_images_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_property_images_property_id'), ['property_id'], unique=False)

    op.create_table('verification_documents',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('property_id', sa.Uuid(), nullable=False),
    sa.Column('uploader_id', sa.Uuid(), nullable=False),
    sa.Column('document_type', sa.Enum('PROOF_OF_OWNERSHIP', 'LISTER_IDENTIFICATION', 'OTHER', name='documenttype'), nullable=False),
    sa.Column('file_url', sa.String(length=512), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name='fk_verification_documents_property_id_properties'),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], name='fk_verification_documents_uploader_id_users'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_verification_documents'))
    )
    with op.batch_alter_table('verification_documents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_verification_documents_document_type'), ['document_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_verification_documents_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_verification_documents_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_verification_documents_uploader_id'), ['uploader_id'], unique=False)

    op.create_table('chat_messages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('chat_id', sa.Uuid(), nullable=False),
    sa.Column('sender_id', sa.Uuid(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], name='fk_chat_messages_chat_id_chats'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='fk_chat_messages_sender_id_users'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_messages'))
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_messages_chat_id'), ['chat_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_sender_id'), ['sender_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_messages_sender_id'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_id'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_chat_id'))

    op.drop_table('chat_messages')
    with op.batch_alter_table('verification_documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_verification_documents_uploader_id'))
        batch_op.drop_index(batch_op.f('ix_verification_documents_property_id'))
        batch_op.drop_index(batch_op.f('ix_verification_documents_id'))
        batch_op.drop_index(batch_op.f('ix_verification_documents_document_type'))

    op.drop_table('verification_documents')
    with op.batch_alter_table('property_images', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_property_images_property_id'))
        batch_op.drop_index(batch_op.f('ix_property_images_id'))

    op.drop_table('property_images')
    op.drop_table('leases')
    op.drop_table('favorites')
    with op.batch_alter_table('chats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chats_property_user_id'))
        batch_op.drop_index(batch_op.f('ix_chats_property_id'))
        batch_op.drop_index(batch_op.f('ix_chats_initiator_id'))
        batch_op.drop_index(batch_op.f('ix_chats_id'))

    op.drop_table('chats')
    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_properties_status'))
        batch_op.drop_index(batch_op.f('ix_properties_state'))
        batch_op.drop_index(batch_op.f('ix_properties_promotion_expires_at'))
        batch_op.drop_index(batch_op.f('ix_properties_pricing_type'))
        batch_op.drop_index(batch_op.f('ix_properties_price'))
        batch_op.drop_index(batch_op.f('ix_properties_owner_id'))
        batch_op.drop_index(batch_op.f('ix_properties_lister_id'))
        batch_op.drop_index(batch_op.f('ix_properties_id'))
        batch_op.drop_index(batch_op.f('ix_properties_country'))
        batch_op.drop_index(batch_op.f('ix_properties_city'))

    op.drop_table('properties')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_phone_number'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('lease_agreement_templates')
    # ### end Alembic commands ###
